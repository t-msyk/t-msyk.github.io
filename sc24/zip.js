function download_zip_test() {
  var blob = new Blob(
  //    0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
    [ new Uint8Array(
    [0x50,0x4B,0x03,0x04,0x14,0x00,0x00,0x00,0x00,0x00,0x72,0x6B,0x3A,0x48,0x20,0xF2 // 0000
    ,0xC9,0x2A,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x72,0x61 // 0010
    ,0x63,0x63,0x6F,0x6F,0x6E,0xCA,0xFE,0x50,0x4B,0x01,0x02,0x14,0x00,0x14,0x00,0x00 // 0020
    ,0x00,0x00,0x00,0x72,0x6B,0x3A,0x48,0x20,0xF2,0xC9,0x2A,0x02,0x00,0x00,0x00,0x02 // 0030
    ,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00 // 0040
    ,0x00,0x00,0x00,0x00,0x00,0x72,0x61,0x63,0x63,0x6F,0x6F,0x6E,0x50,0x4B,0x05,0x06 // 0050
    ,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x35,0x00,0x00,0x00,0x27,0x00,0x00,0x00 // 0060
    ,0x00,0x00                                                                       // 0070]
    ])],
    { type : "application/octet-stream" }
  );
  var a = document.createElement('a');
  document.body.appendChild(a);
  a.href = window.URL.createObjectURL(blob);
  a.download = 'test.zip';
  a.click();
  document.body.removeChild(a);
}

function crc32_reverse8 ( x ) {
  var ret = 0x00;
  for ( var i=0; i<8; ++i ) {
    ret = ( ret >>> 1 ) | ( x<<i & 0x80 );
  }
  return ret >>> 0;
}

function crc32_reverse32 ( x ) {
  var ret = 0x00;
  for ( var i=0; i<32; ++i ) {
    ret = ( ret >>> 1 ) | ( x<<i & 0x80000000 );
  }
  return ret >>> 0;
}

function crc32_prep ( data ) {
  for ( var i=0; i<4; ++i ) {
    data.push(0x00);
  }
  for ( var i=0; i<data.length; ++i ) {
    data[i] = crc32_reverse8(data[i]);
  }
  for ( var i=0; i<4; ++i ) {
    data[i] = ~data[i] & 0xFF;
  }
}

function crc32 ( data ) {
  var magic = 0x04c11db7;
  var crc = 0x00;
  var clone = [];
  for ( var i=0; i<data.length; ++i ) {
    clone.push(data[i]);
  }
  crc32_prep(clone);
  for ( var i=0; i<clone.length; ++i ) {
    for ( var j=0; j<8; j++ ) {
      var msb = 0x80000000 & crc;
      crc = ( crc << 1 ) | ( clone[i] >> (7-j) );
      if ( msb ) crc ^= magic;
    }
  }
  return ~crc32_reverse32(crc) >>> 0;
}

function main () {
  //var data = [ 0x61 ];
  //var data = [ 0xCA, 0xFE ];
  var data = [ 0x61, 0x62, 0x63, 0x64 ];
  console.log(data);
  console.log(crc32(data).toString(16));
  console.log(data);
}

